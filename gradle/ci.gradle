apply plugin : 'org.ysb33r.cloudci'

cloudci {
    travisci {
        ext {
            logBeforeTest = { desc ->
                project.logger.lifecycle "Running: ${desc.name} (${desc.className})"
            }
            logAfterTest = { testTracker, desc, result ->
                if(result.resultType == org.gradle.api.tasks.testing.TestResult.ResultType.FAILURE) {
                    String key = "${descriptor.name} (${descriptor.className})"
                    project.logger.lifecycle "FAILED: ${key}",
                        result.exceptions,
                        testTracker.containsKey(key) ? testTracker[key] : ''
                }
            }

            testOutputListener = { testTracker, descriptor, outputEvent ->
                String n = "${descriptor.name} (${descriptor.className})"

                if(testTracker.containsKey(n)) {
                    testTracker[n] = "${testTracker[n]}\n${outputEvent.message}"
                } else {
                    testTracker[n] = outputEvent.message
                }
            }
        }

        project.tasks.withType(Test) { t ->
            t.with {
                ext {
                    testTracker = [:]
                }
                beforeTest logBeforeTest
                afterTest logAfterTest.curry(testTracker)
                addTestOutputListener (testOutputListener.curry(testTracker) as TestOutputListener)
            }
        }
    }
}